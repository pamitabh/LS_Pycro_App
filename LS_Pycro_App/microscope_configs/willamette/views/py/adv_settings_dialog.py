# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\Raghu\Desktop\Microscope Software\LS_Pycro_App\LS_Pycro_App\microscope_configs\willamette\views\ui_files\AdvSettingsDialog.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_AdvSettingsDialog(object):
    def setupUi(self, AdvSettingsDialog):
        AdvSettingsDialog.setObjectName("AdvSettingsDialog")
        AdvSettingsDialog.resize(443, 181)
        self.acq_order_combo_box = QtWidgets.QComboBox(AdvSettingsDialog)
        self.acq_order_combo_box.setGeometry(QtCore.QRect(300, 40, 81, 22))
        self.acq_order_combo_box.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.acq_order_combo_box.setObjectName("acq_order_combo_box")
        self.z_stack_exp_unit_label = QtWidgets.QLabel(AdvSettingsDialog)
        self.z_stack_exp_unit_label.setGeometry(QtCore.QRect(190, 90, 21, 16))
        self.z_stack_exp_unit_label.setAlignment(QtCore.Qt.AlignCenter)
        self.z_stack_exp_unit_label.setObjectName("z_stack_exp_unit_label")
        self.z_stack_settings_label = QtWidgets.QLabel(AdvSettingsDialog)
        self.z_stack_settings_label.setGeometry(QtCore.QRect(60, 10, 101, 20))
        self.z_stack_settings_label.setAlignment(QtCore.Qt.AlignCenter)
        self.z_stack_settings_label.setObjectName("z_stack_settings_label")
        self.z_stack_exposure_line_edit = QtWidgets.QLineEdit(AdvSettingsDialog)
        self.z_stack_exposure_line_edit.setGeometry(QtCore.QRect(130, 90, 61, 20))
        self.z_stack_exposure_line_edit.setObjectName("z_stack_exposure_line_edit")
        self.z_stack_exposure_label = QtWidgets.QLabel(AdvSettingsDialog)
        self.z_stack_exposure_label.setGeometry(QtCore.QRect(10, 90, 111, 20))
        self.z_stack_exposure_label.setObjectName("z_stack_exposure_label")
        self.video_spectral_check_box = QtWidgets.QCheckBox(AdvSettingsDialog)
        self.video_spectral_check_box.setGeometry(QtCore.QRect(60, 150, 121, 20))
        self.video_spectral_check_box.setObjectName("video_spectral_check_box")
        self.video_settings_label = QtWidgets.QLabel(AdvSettingsDialog)
        self.video_settings_label.setGeometry(QtCore.QRect(60, 130, 101, 20))
        self.video_settings_label.setAlignment(QtCore.Qt.AlignCenter)
        self.video_settings_label.setObjectName("video_settings_label")
        self.stage_speed_label = QtWidgets.QLabel(AdvSettingsDialog)
        self.stage_speed_label.setGeometry(QtCore.QRect(40, 60, 71, 20))
        self.stage_speed_label.setObjectName("stage_speed_label")
        self.stage_speed_combo_box = QtWidgets.QComboBox(AdvSettingsDialog)
        self.stage_speed_combo_box.setGeometry(QtCore.QRect(110, 60, 69, 22))
        self.stage_speed_combo_box.setObjectName("stage_speed_combo_box")
        self.line = QtWidgets.QFrame(AdvSettingsDialog)
        self.line.setGeometry(QtCore.QRect(-310, 110, 531, 20))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.line.setFont(font)
        self.line.setFrameShadow(QtWidgets.QFrame.Plain)
        self.line.setLineWidth(4)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setObjectName("line")
        self.line_2 = QtWidgets.QFrame(AdvSettingsDialog)
        self.line_2.setGeometry(QtCore.QRect(210, -170, 20, 351))
        self.line_2.setFrameShadow(QtWidgets.QFrame.Plain)
        self.line_2.setLineWidth(4)
        self.line_2.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_2.setObjectName("line_2")
        self.acq_order_label = QtWidgets.QLabel(AdvSettingsDialog)
        self.acq_order_label.setGeometry(QtCore.QRect(270, 10, 131, 20))
        self.acq_order_label.setAlignment(QtCore.Qt.AlignCenter)
        self.acq_order_label.setObjectName("acq_order_label")
        self.save_label = QtWidgets.QLabel(AdvSettingsDialog)
        self.save_label.setGeometry(QtCore.QRect(240, 150, 91, 20))
        self.save_label.setObjectName("save_label")
        self.backup_directory_browse_button = QtWidgets.QPushButton(AdvSettingsDialog)
        self.backup_directory_browse_button.setGeometry(QtCore.QRect(300, 120, 75, 23))
        self.backup_directory_browse_button.setObjectName("backup_directory_browse_button")
        self.backup_directory_line_edit = QtWidgets.QLineEdit(AdvSettingsDialog)
        self.backup_directory_line_edit.setGeometry(QtCore.QRect(340, 150, 81, 20))
        self.backup_directory_line_edit.setObjectName("backup_directory_line_edit")
        self.backup_directory_check_box = QtWidgets.QCheckBox(AdvSettingsDialog)
        self.backup_directory_check_box.setGeometry(QtCore.QRect(280, 100, 121, 20))
        self.backup_directory_check_box.setObjectName("backup_directory_check_box")
        self.z_stack_spectral_check_box = QtWidgets.QCheckBox(AdvSettingsDialog)
        self.z_stack_spectral_check_box.setGeometry(QtCore.QRect(60, 30, 121, 20))
        self.z_stack_spectral_check_box.setObjectName("z_stack_spectral_check_box")
        self.line_7 = QtWidgets.QFrame(AdvSettingsDialog)
        self.line_7.setGeometry(QtCore.QRect(-10, 170, 491, 20))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.line_7.setFont(font)
        self.line_7.setFrameShadow(QtWidgets.QFrame.Plain)
        self.line_7.setLineWidth(4)
        self.line_7.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_7.setObjectName("line_7")
        self.line_8 = QtWidgets.QFrame(AdvSettingsDialog)
        self.line_8.setGeometry(QtCore.QRect(220, 70, 491, 20))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.line_8.setFont(font)
        self.line_8.setFrameShadow(QtWidgets.QFrame.Plain)
        self.line_8.setLineWidth(4)
        self.line_8.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_8.setObjectName("line_8")
        self.backup_directory_label = QtWidgets.QLabel(AdvSettingsDialog)
        self.backup_directory_label.setGeometry(QtCore.QRect(270, 80, 131, 20))
        self.backup_directory_label.setAlignment(QtCore.Qt.AlignCenter)
        self.backup_directory_label.setObjectName("backup_directory_label")

        self.retranslateUi(AdvSettingsDialog)
        QtCore.QMetaObject.connectSlotsByName(AdvSettingsDialog)

    def retranslateUi(self, AdvSettingsDialog):
        _translate = QtCore.QCoreApplication.translate
        AdvSettingsDialog.setWindowTitle(_translate("AdvSettingsDialog", "Advanced Settings"))
        self.acq_order_combo_box.setWhatsThis(_translate("AdvSettingsDialog", "<html><head/><body><p>Sets acquisition priority order.</p><p>If set to TIME_SAMP, all samples set in the regions setup will be acquired at each timepoint. This is the default setting.</p><p><br/></p><p>If set to SAMP_TIME, a full time series will be performed for each fish set in the regions setup.</p><p><br/></p><p>If set to POS_TIME, a full time series will be performed for each region set in the regions setup.</p></body></html>"))
        self.z_stack_exp_unit_label.setText(_translate("AdvSettingsDialog", "ms"))
        self.z_stack_settings_label.setText(_translate("AdvSettingsDialog", "<html><head/><body><p><span style=\" font-weight:600;\">Z-Stack Settings</span></p></body></html>"))
        self.z_stack_exposure_line_edit.setWhatsThis(_translate("AdvSettingsDialog", "<html><head/><body><p>Exposure time for use in Z-stack. </p><p>If spectral Z-stack is selected, exposure time is only limited by camera\'s min/max exposure time. </p><p>If spectral Z-stack is not selected, max exposure time is 1/stage_speed, rounded down, and min is limited by the camera.</p></body></html>"))
        self.z_stack_exposure_label.setText(_translate("AdvSettingsDialog", "Z-Stack Exposure Time:"))
        self.video_spectral_check_box.setWhatsThis(_translate("AdvSettingsDialog", "<html><head/><body><p>If checked, videos will be performed by alternating between channels until the desired number of images are acquired per channel.</p></body></html>"))
        self.video_spectral_check_box.setText(_translate("AdvSettingsDialog", "Spectral Video?"))
        self.video_settings_label.setText(_translate("AdvSettingsDialog", "<html><head/><body><p><span style=\" font-weight:600;\">Video Settings</span></p></body></html>"))
        self.stage_speed_label.setText(_translate("AdvSettingsDialog", "Stage Speed:"))
        self.stage_speed_combo_box.setWhatsThis(_translate("AdvSettingsDialog", "<html><head/><body><p>Sets stage speed to be used during continuous Z-stack. Note that this doesn\'t apply if Spectral Z-stack is enabled.</p><p>Since 30 is the full sensor maximum framerate of the PCO camera, 30 um/s is the current default speed. </p></body></html>"))
        self.acq_order_label.setText(_translate("AdvSettingsDialog", "<html><head/><body><p><span style=\" font-weight:600;\">Acquisition Order:</span></p></body></html>"))
        self.save_label.setText(_translate("AdvSettingsDialog", "Backup Directory:"))
        self.backup_directory_browse_button.setWhatsThis(_translate("AdvSettingsDialog", "<html><head/><body><p>Browse and choose backup directory.</p></body></html>"))
        self.backup_directory_browse_button.setText(_translate("AdvSettingsDialog", "Browse..."))
        self.backup_directory_line_edit.setWhatsThis(_translate("AdvSettingsDialog", "<html><head/><body><p>Backup directory.</p></body></html>"))
        self.backup_directory_check_box.setWhatsThis(_translate("AdvSettingsDialog", "<html><head/><body><p>Let\'s you choose a backup directory in case the primary directory runs out of space.</p></body></html>"))
        self.backup_directory_check_box.setText(_translate("AdvSettingsDialog", "Backup Directory"))
        self.z_stack_spectral_check_box.setWhatsThis(_translate("AdvSettingsDialog", "<html><head/><body><p>If checked, Z-stack will be performed in the following way:</p><p>1. stage will move to first position.</p><p>2. Images will be taken with each channel selected.</p><p>3. stage will move by the set step size.</p><p>4. repeat 2 and 3 until end position is reached.</p><p>Otherwise, Z-stack will be performed with continuous stage motion, acquiring one channel at a time.</p></body></html>"))
        self.z_stack_spectral_check_box.setText(_translate("AdvSettingsDialog", "Spectral Z-stack?"))
        self.backup_directory_label.setText(_translate("AdvSettingsDialog", "<html><head/><body><p><span style=\" font-weight:600;\">Backup Directory</span></p></body></html>"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    AdvSettingsDialog = QtWidgets.QDialog()
    ui = Ui_AdvSettingsDialog()
    ui.setupUi(AdvSettingsDialog)
    AdvSettingsDialog.show()
    sys.exit(app.exec_())
